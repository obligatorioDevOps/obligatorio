apiVersion: v1
kind: Service
metadata:
  name: products-service
spec:
  clusterIP: 172.20.10.13
  selector:
    app: products-app
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: payments-service
spec:
  clusterIP: 172.20.10.11
  selector:
    app: payments-app
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: shipping-service
spec:
  clusterIP: 172.20.10.12
  selector:
    app: shipping-app
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
spec:
  clusterIP: 172.20.10.10
  selector:
    app: orders-app
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx-app
  ports:
  - protocol: "TCP"
    port: 80
    nodePort: 31234
    targetPort: 80   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-app
spec:
  selector:
    matchLabels:
      app: payments-app
  replicas: 1
  template:
    metadata:
      labels:
        app: payments-app
    spec:
      containers:
      - name: payments-app
        image: ortdevops2022/payments-service-example
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-app
spec:
  selector:
    matchLabels:
      app: products-app
  replicas: 1
  template:
    metadata:
      labels:
        app: products-app
    spec:
      containers:
      - name: products-app
        image: ortdevops2022/products-service-example
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping-app
spec:
  selector:
    matchLabels:
      app: shipping-app
  replicas: 1
  template:
    metadata:
      labels:
        app: shipping-app
    spec:
      containers:
      - name: shipping-app
        image: ortdevops2022/shipping-service-example
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-app
  
spec:
  selector:
    matchLabels:
      app: orders-app
  replicas: 1
  template:
    metadata:
      labels:
        app: orders-app
    spec:
      containers:
      - name: orders-app
        image: ortdevops2022/orders-service-example
        env:
         - name: APP_ARGS
           value: "http://172.20.10.11 http://172.20.10.12 http://172.20.10.13"
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-app
spec:
  selector:
    matchLabels:
      app: nginx-app
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-app
    spec:
      containers:
      - name: nginx-app
        image: ortdevops2022/nginx-service-example
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        imagePullPolicy: Always
        ports:
        - containerPort: 80